/* Reset e configura√ß√µes b√°sicas */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: #333;
}

/* Header */
h1 {
  color: white;
  font-size: 3.5rem;
  font-weight: 700;
  text-align: center;
  margin-bottom: 10px;
  text-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  animation: fadeInDown 1s ease;
}

h1::before {
  content: 'üé´';
  margin-right: 15px;
  font-size: 3rem;
}

p {
  color: rgba(255, 255, 255, 0.9);
  font-size: 1.2rem;
  text-align: center;
  margin-bottom: 40px;
  animation: fadeInUp 1s ease 0.2s both;
}

/* Card principal */
.card {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 40px;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
  width: 100%;
  max-width: 400px;
  animation: fadeInUp 1s ease 0.4s both;
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Formul√°rio */
form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

input {
  padding: 18px 20px;
  border: 2px solid #e0e0e0;
  border-radius: 12px;
  font-size: 1.1rem;
  transition: all 0.3s ease;
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
}

input:focus {
  outline: none;
  border-color: #667eea;
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  transform: translateY(-2px);
}

input::placeholder {
  color: #999;
  font-weight: 500;
}

/* Bot√£o */
button {
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: white;
  border: none;
  padding: 18px;
  border-radius: 12px;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
}

button:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
}

button:active {
  transform: translateY(-1px);
}

button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

button:hover::before {
  left: 100%;
}

/* Link de navega√ß√£o */
.link-text {
  text-align: center;
  margin-top: 30px;
  padding-top: 20px;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  color: #666;
  font-size: 1rem;
}

.link-text a {
  color: #667eea;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s ease;
  position: relative;
}

.link-text a:hover {
  color: #764ba2;
}

.link-text a::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, #667eea, #764ba2);
  transition: width 0.3s ease;
}

.link-text a:hover::after {
  width: 100%;
}

/* Anima√ß√µes */
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsividade */
@media (max-width: 480px) {
  .card {
    margin: 20px;
    padding: 30px 25px;
  }
  
  h1 {
    font-size: 2.5rem;
  }
  
  h1::before {
    font-size: 2rem;
  }
  
  p {
    font-size: 1rem;
    margin-bottom: 30px;
  }
  
  input, button {
    padding: 16px 18px;
    font-size: 1rem;
  }
}

/* Efeitos de hover para inputs */
input:hover {
  border-color: #667eea;
  transform: translateY(-1px);
}

/* Mensagens de erro/sucesso */
.mensagem {
  position: fixed;
  top: 20px;
  right: 20px;
  padding: 15px 20px;
  border-radius: 12px;
  color: white;
  font-weight: 600;
  z-index: 1000;
  animation: slideIn 0.3s ease;
  max-width: 300px;
  word-wrap: break-word;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
}

.mensagem.success {
  background: linear-gradient(135deg, #28a745, #20c997);
}

.mensagem.error {
  background: linear-gradient(135deg, #dc3545, #e74c3c);
}

.mensagem.info {
  background: linear-gradient(135deg, #007bff, #0056b3);
}

/* Anima√ß√µes para mensagens */
@keyframes slideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideOut {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

/* Efeitos de foco melhorados */
.card:focus-within {
  box-shadow: 0 25px 70px rgba(0, 0, 0, 0.3);
  transform: translateY(-5px);
}

/* Loading state para bot√µes */
button.loading {
  position: relative;
  color: transparent;
}

button.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin: -10px 0 0 -10px;
  border: 2px solid transparent;
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Valida√ß√£o visual */
input.valid {
  border-color: #28a745;
  background: rgba(40, 167, 69, 0.05);
}

input.invalid {
  border-color: #dc3545;
  background: rgba(220, 53, 69, 0.05);
}

/* Efeitos de part√≠culas no background */
body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.05) 0%, transparent 50%);
  pointer-events: none;
  z-index: -1;
}

/* Melhorias na acessibilidade */
input:focus-visible {
  outline: 2px solid #667eea;
  outline-offset: 2px;
}

button:focus-visible {
  outline: 2px solid white;
  outline-offset: 2px;
}

/* Transi√ß√µes suaves */
* {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Efeito de profundidade no card */
.card {
  transform-style: preserve-3d;
  perspective: 1000px;
}

.card:hover {
  transform: rotateX(2deg) rotateY(2deg);
}
